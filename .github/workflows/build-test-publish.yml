on:
  push:
    branches: [ "main", "github-actions" ]
    paths-ignore:
    - 'docs/**'
    - '*.md'
    - 'LICENSE.txt'
    - 'PROJECT'
    - 'hack/**'
  pull_request:
    branches: [ "main" ]

env:
  GO_VERSION: ~1.19 # Require Go 1.19 and above, but lower than Go 2.0.0

jobs:
  unit_integration_tests:
    name: unit and integration tests
    runs-on: ubuntu-latest
    container: us.gcr.io/cf-rabbitmq-for-k8s-bunny/rabbitmq-for-kubernetes-ci
    steps:
    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}
        check-latest: true
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
    - name: Unit tests
      run: make unit-tests
    - name: Integration tests
      run: make integration-tests

  build_operator:
    runs-on: ubuntu-latest
    needs: unit_integration_tests
    permissions:
      contents: 'write'
      id-token: 'write'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}
        check-latest: true
    - name: OCI Metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        # list of Docker images to use as base name for tags
        images: |
          rabbitmqoperator/messaging-topology-operator
        # generate Docker tags based on the following events/attributes
        tags: |
          type=edge
          type=sha
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        platforms: linux/amd64, linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  system_tests_kind:
    name: System tests using KinD
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    strategy:
      matrix:
        k8s: [v1.22.9, v1.24.1]
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}
        check-latest: true
    - name: System tests
      env:
        K8S_VERSION: ${{ matrix.k8s }}
      run: |
        export GOPATH="$HOME/go"
        export PATH="$PATH:$GOPATH/bin"
        make install-tools cmctl
        kind create cluster --image kindest/node:"$K8S_VERSION"
        make cert-manager cluster-operator
        DOCKER_REGISTRY_SERVER=local-server OPERATOR_IMAGE=local-operator make deploy-kind BUILD_KIT=docker
        make system-tests BUILD_KIT=docker
