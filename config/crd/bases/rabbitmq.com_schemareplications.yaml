
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: schemareplications.rabbitmq.com
spec:
  group: rabbitmq.com
  names:
    kind: SchemaReplication
    listKind: SchemaReplicationList
    plural: schemareplications
    singular: schemareplication
  scope: Namespaced
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: 'SchemaReplication is the Schema for the schemareplications API
          This feature requires Tanzu RabbitMQ with schema replication plugin. For
          more information, see: https://tanzu.vmware.com/rabbitmq and https://www.rabbitmq.com/definitions-standby.html.'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SchemaReplicationSpec defines the desired state of SchemaReplication
            properties:
              rabbitmqClusterReference:
                description: Reference to the RabbitmqCluster that schema replication
                  would be set for. Must be an existing cluster.
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              upstreamSecret:
                description: Defines a Secret which contains credentials to be used
                  for schema replication. The Secret must contain the keys `endpoints`,
                  `username` and `password` in its Data field, or operator will error.
                  `endpoints` should be one or multiple endpoints separated by ','.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
            required:
            - rabbitmqClusterReference
            type: object
          status:
            description: SchemaReplicationStatus defines the observed state of SchemaReplication
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: The last time this Condition type changed.
                      format: date-time
                      type: string
                    message:
                      description: Full text reason for current status of the condition.
                      type: string
                    reason:
                      description: One word, camel-case reason for current status
                        of the condition.
                      type: string
                    status:
                      description: True, False, or Unknown
                      type: string
                    type:
                      description: Type indicates the scope of RabbitmqCluster status
                        addressed by the condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: observedGeneration is the most recent successful generation
                  observed for this Queue. It corresponds to the Queue's generation,
                  which is updated on mutation by the API Server.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
